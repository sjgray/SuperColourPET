Update for SwiftLink-232 Software Developers -- 5/09/90

Well, we have *finally* decided how the production version of the cartridge will function.  First off, there will be a slide switch (user-accessible on the top) to switch between the NMI and IRQ interrupt lines.

Second, the cartridge will support 8 of the 9 lines in the IBM-AT serial port standard: TxD, RxD, DTR, DSR, CTS, RTS, & DCD.  RI (Ring Indicator) will not be supported because the 6551 doesn't have a pin for it.  Note that the prototypes you have do not support CTS, RTS, or DCD.

CTS and RTS are used for hardware flow-control and are not used by most 2400-bps-and-slower Hayes modems-- unless it's a MNP modem.  You can use the RTS line to tell such a modem to stop transmitting to the computer temporarily--clear bits 2 & 3 in the Command register.  CTS is used by the modem to tell the computer to temporarily stop transmitting data to it.  You can't monitor CTS from the computer-- it is handled automatically by the 6551.  When the modem pulls CTS inactive, the 6551 will stop transmitting.  It will also clear the "ok to transmit" bit in the status register (#4) to let you know not to send it more data.  (So, in a way you can tell when CTS is inactive.)

DCD is used to determine when the connected device has received a remote carrier signal.  The 6551 is set up so that when carrier isn't present, it disables the receiver.  This may sound strange, but we think this was done to try to cut down on spurious interrupts and garbage data when the RS-232 device wasn't connected to a valid remote signal.  (On your prototypes, DCD was grounded, which made it always active.)

Unfortunately, Hayes modems send back several useful ASCII strings that most software authors want to be able to read--and most of them occur before the modem has established carrier.

So, what we did was swap the DCD and DSR inputs to the 6551.  On the production version of the cart, you will look at bit 6 (NOT 5) of the status register to determine whether there is a valid carrier or not.  Likewise, you will look at bit 5 (NOT 6) to read the state of DSR.  The reason this will work better is DSR is ALWAYS active--unless the modem is disconnected or broken (DSR stands for Data Set Ready).  We could have connected the DCD line to the DSR pin of the 6551 and then grounded the 6551's DCD pin to make it always active, but we thought we might as well connect DSR *just in case* someone really wants to know if DSR is present or not.

Three of the four inputs to the 6551 (DSR, DCD, & CTS) are "optional" in the sense that the bare minimum needed for successful null-modem connections is just TxD, RxD (the fourth input) and GND.  Therefore, we have put pull-up resistors on these three inputs so that if those pins are not present in someone's cable, they will be pulled to the active state.  This is a change from the prototypes you have.

Things are on schedule hardware-wise for making our June 1 ship date.  We actually have a few orders already, so PLEASE try to finish up your work within two more weeks.  Please contact us if you are having questions or when you have a version of your program you want us to test.
Sincerely,


Bryan Minugh (hardware)
Noel Nyman   (software)
Kent Sullivan (a little of both and
               everything else!)
